{"ast":null,"code":"var _jsxFileName = \"/home/sorty/Documents/task-management-app/src/components/CreateTask/index.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MyButton } from '../UI/button/MyButton';\nimport { MyInput } from '../UI/input/MyInput';\nimport { creaTask } from '../../redux/slices/tasksSlice';\nimport { Textarea } from '../UI/textarea';\nimport { Statuses } from '../Statuses';\nimport styles from './CreateTask.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateTask = _ref => {\n  _s();\n  let {\n    toggleModel\n  } = _ref;\n  const [title, setTitle] = React.useState('');\n  const [descr, setDescr] = React.useState('');\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.createTask.tasks);\n  const selectedStatus = useSelector(state => state.createTask.selectedStatus);\n  const createTask = () => {\n    const newTask = {\n      id: Date.now(),\n      title,\n      descr,\n      selectedStatus\n    };\n    dispatch(creaTask([newTask, ...tasks]));\n    toggleModel();\n    setTitle('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CreateTaskWrap,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create your own Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.CreateTaskItem,\n        children: /*#__PURE__*/_jsxDEV(MyInput, {\n          onChange: e => setTitle(e.target.value),\n          value: title,\n          placeholder: 'Task name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.CreateTaskItem,\n        children: /*#__PURE__*/_jsxDEV(Textarea, {\n          rows: 5,\n          placeholder: \"Describe your task\",\n          onChange: e => setDescr(e.target.value),\n          value: descr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.CreateTaskItem,\n        children: /*#__PURE__*/_jsxDEV(Statuses, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.CreateTaskItem,\n        children: /*#__PURE__*/_jsxDEV(MyButton, {\n          className: 'green-btn',\n          onClick: () => createTask(),\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTask, \"zecPw4DhDdjd8UgjcZSoL4p/KYM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = CreateTask;\nvar _c;\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"names":["React","useDispatch","useSelector","MyButton","MyInput","creaTask","Textarea","Statuses","styles","CreateTask","toggleModel","title","setTitle","useState","descr","setDescr","dispatch","tasks","state","createTask","selectedStatus","newTask","id","Date","now","CreateTaskWrap","CreateTaskItem","e","target","value"],"sources":["/home/sorty/Documents/task-management-app/src/components/CreateTask/index.jsx"],"sourcesContent":["import React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { MyButton } from '../UI/button/MyButton'\nimport { MyInput } from '../UI/input/MyInput'\n\nimport { creaTask } from '../../redux/slices/tasksSlice'\nimport { Textarea } from '../UI/textarea'\nimport { Statuses } from '../Statuses'\n\nimport styles from './CreateTask.module.css'\n\n\nexport const CreateTask = ({ toggleModel }) => {\n  const [title, setTitle] = React.useState('')\n  const [descr, setDescr] = React.useState('')\n\n  const dispatch = useDispatch()\n  const tasks = useSelector(state => state.createTask.tasks)\n  const selectedStatus = useSelector(state => state.createTask.selectedStatus)\n\n\n  const createTask = () => {\n    const newTask = {\n      id: Date.now(),\n      title,\n      descr,\n      selectedStatus,\n    }\n\n    dispatch(creaTask([newTask, ...tasks]))\n    toggleModel()\n    setTitle('')\n  }\n\n  return (\n    <div>\n      <div className={styles.CreateTaskWrap}>\n        <h2>Create your own Task</h2>\n\n        <div className={styles.CreateTaskItem}>\n          <MyInput\n            onChange={e => setTitle(e.target.value)}\n            value={title}\n            placeholder={'Task name'}\n          />\n        </div>\n\n        <div className={styles.CreateTaskItem}>\n          <Textarea\n            rows={5}\n            placeholder='Describe your task'\n            onChange={e => setDescr(e.target.value)}\n            value={descr}\n          />\n        </div>\n\n        <div className={styles.CreateTaskItem}>\n          <Statuses/>\n        </div>\n\n        <div className={styles.CreateTaskItem}>\n          <MyButton className={'green-btn'} onClick={() => createTask()}>Create Task</MyButton>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,OAAO,QAAQ,qBAAqB;AAE7C,SAASC,QAAQ,QAAQ,+BAA+B;AACxD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,QAAQ,QAAQ,aAAa;AAEtC,OAAOC,MAAM,MAAM,yBAAyB;AAAA;AAG5C,OAAO,MAAMC,UAAU,GAAG,QAAqB;EAAA;EAAA,IAApB;IAAEC;EAAY,CAAC;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMG,QAAQ,GAAGf,WAAW,EAAE;EAC9B,MAAMgB,KAAK,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,UAAU,CAACF,KAAK,CAAC;EAC1D,MAAMG,cAAc,GAAGlB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,UAAU,CAACC,cAAc,CAAC;EAG5E,MAAMD,UAAU,GAAG,MAAM;IACvB,MAAME,OAAO,GAAG;MACdC,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;MACdb,KAAK;MACLG,KAAK;MACLM;IACF,CAAC;IAEDJ,QAAQ,CAACX,QAAQ,CAAC,CAACgB,OAAO,EAAE,GAAGJ,KAAK,CAAC,CAAC,CAAC;IACvCP,WAAW,EAAE;IACbE,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACE;IAAA,uBACE;MAAK,SAAS,EAAEJ,MAAM,CAACiB,cAAe;MAAA,wBACpC;QAAA,UAAI;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAK,eAE7B;QAAK,SAAS,EAAEjB,MAAM,CAACkB,cAAe;QAAA,uBACpC,QAAC,OAAO;UACN,QAAQ,EAAEC,CAAC,IAAIf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UACxC,KAAK,EAAElB,KAAM;UACb,WAAW,EAAE;QAAY;UAAA;UAAA;UAAA;QAAA;MACzB;QAAA;QAAA;QAAA;MAAA,QACE,eAEN;QAAK,SAAS,EAAEH,MAAM,CAACkB,cAAe;QAAA,uBACpC,QAAC,QAAQ;UACP,IAAI,EAAE,CAAE;UACR,WAAW,EAAC,oBAAoB;UAChC,QAAQ,EAAEC,CAAC,IAAIZ,QAAQ,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UACxC,KAAK,EAAEf;QAAM;UAAA;UAAA;UAAA;QAAA;MACb;QAAA;QAAA;QAAA;MAAA,QACE,eAEN;QAAK,SAAS,EAAEN,MAAM,CAACkB,cAAe;QAAA,uBACpC,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QACP,eAEN;QAAK,SAAS,EAAElB,MAAM,CAACkB,cAAe;QAAA,uBACpC,QAAC,QAAQ;UAAC,SAAS,EAAE,WAAY;UAAC,OAAO,EAAE,MAAMP,UAAU,EAAG;UAAA,UAAC;QAAW;UAAA;UAAA;UAAA;QAAA;MAAW;QAAA;QAAA;QAAA;MAAA,QACjF;IAAA;MAAA;MAAA;MAAA;IAAA;EAEF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GAvDYV,UAAU;EAAA,QAIJR,WAAW,EACdC,WAAW,EACFA,WAAW;AAAA;AAAA,KANvBO,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}