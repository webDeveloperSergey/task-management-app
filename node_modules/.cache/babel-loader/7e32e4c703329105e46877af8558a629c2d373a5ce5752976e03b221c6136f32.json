{"ast":null,"code":"var _jsxFileName = \"/home/sorty/Documents/task-management-app/src/components/CreateTask/index.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TaskItem } from '../TaskItem';\nimport { MyButton } from '../UI/button/MyButton';\nimport { MyInput } from '../UI/input/MyInput';\nimport { creaTask } from '../../redux/slices/tasksSlice';\nimport { setIsOpen } from '../../redux/slices/isOpenSlice';\nimport { Textarea } from '../UI/textarea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateTask = () => {\n  _s();\n  const [title, setTitle] = React.useState('');\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.createTask.tasks);\n  const createTask = () => {\n    const newTask = {\n      id: Date.now(),\n      title\n    };\n    dispatch(creaTask([...tasks, newTask]));\n    dispatch(setIsOpen(false));\n    setTitle('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      onChange: e => setTitle(e.target.value),\n      value: title,\n      placeholder: 'Опишите задачу'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Textarea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      className: 'green-btn',\n      onClick: () => createTask(),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTask, \"PMY+Hub9858IpZwBgitFQmamDvY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CreateTask;\nvar _c;\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"names":["React","useDispatch","useSelector","TaskItem","MyButton","MyInput","creaTask","setIsOpen","Textarea","CreateTask","title","setTitle","useState","dispatch","tasks","state","createTask","newTask","id","Date","now","e","target","value"],"sources":["/home/sorty/Documents/task-management-app/src/components/CreateTask/index.jsx"],"sourcesContent":["import React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { TaskItem } from '../TaskItem'\nimport { MyButton } from '../UI/button/MyButton'\nimport { MyInput } from '../UI/input/MyInput'\n\nimport { creaTask } from '../../redux/slices/tasksSlice'\nimport { setIsOpen } from '../../redux/slices/isOpenSlice'\nimport { Textarea } from '../UI/textarea'\n\nexport const CreateTask = () => {\n  const [title, setTitle] = React.useState('')\n\n  const dispatch = useDispatch()\n  const tasks = useSelector(state => state.createTask.tasks)\n\n\n  const createTask = () => {\n    const newTask = {\n      id: Date.now(),\n      title,\n    }\n\n    dispatch(creaTask([...tasks, newTask]))\n    dispatch(setIsOpen(false))\n    setTitle('')\n\n  }\n\n\n  return (\n    <div>\n\n      <MyInput\n        onChange={e => setTitle(e.target.value)} \n        value={title} \n        placeholder={'Опишите задачу'} \n      />\n\n      <Textarea></Textarea>\n\n      <MyButton className={'green-btn'} onClick={() => createTask()}>Создать задачу</MyButton>\n      \n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,OAAO,QAAQ,qBAAqB;AAE7C,SAASC,QAAQ,QAAQ,+BAA+B;AACxD,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,QAAQ,QAAQ,gBAAgB;AAAA;AAEzC,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAMa,KAAK,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,UAAU,CAACF,KAAK,CAAC;EAG1D,MAAME,UAAU,GAAG,MAAM;IACvB,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;MACdV;IACF,CAAC;IAEDG,QAAQ,CAACP,QAAQ,CAAC,CAAC,GAAGQ,KAAK,EAAEG,OAAO,CAAC,CAAC,CAAC;IACvCJ,QAAQ,CAACN,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1BI,QAAQ,CAAC,EAAE,CAAC;EAEd,CAAC;EAGD,oBACE;IAAA,wBAEE,QAAC,OAAO;MACN,QAAQ,EAAEU,CAAC,IAAIV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MACxC,KAAK,EAAEb,KAAM;MACb,WAAW,EAAE;IAAiB;MAAA;MAAA;MAAA;IAAA,QAC9B,eAEF,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAY,eAErB,QAAC,QAAQ;MAAC,SAAS,EAAE,WAAY;MAAC,OAAO,EAAE,MAAMM,UAAU,EAAG;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAW;EAAA;IAAA;IAAA;IAAA;EAAA,QAEpF;AAEV,CAAC;AAAA,GAnCYP,UAAU;EAAA,QAGJR,WAAW,EACdC,WAAW;AAAA;AAAA,KAJdO,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}