{"ast":null,"code":"var _jsxFileName = \"/home/sorty/Documents/task-management-app/src/components/CreateTask/index.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MyButton } from '../UI/button/MyButton';\nimport { MyInput } from '../UI/input/MyInput';\nimport { creaTask } from '../../redux/slices/tasksSlice';\nimport { setIsOpen } from '../../redux/slices/isOpenSlice';\nimport { Textarea } from '../UI/textarea';\nimport styles from './CreateTask.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateTask = () => {\n  _s();\n  const [title, setTitle] = React.useState('');\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.createTask.tasks);\n  const createTask = () => {\n    const newTask = {\n      id: Date.now(),\n      title\n    };\n    dispatch(creaTask([...tasks, newTask]));\n    dispatch(setIsOpen(false));\n    setTitle('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CreateTaskWrap,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Describe your task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.CreateTaskItem,\n        children: /*#__PURE__*/_jsxDEV(MyInput, {\n          onChange: e => setTitle(e.target.value),\n          value: title,\n          placeholder: 'Task name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.CreateTaskItem,\n        children: /*#__PURE__*/_jsxDEV(Textarea, {\n          rows: \"2\",\n          cols: \"1\",\n          placeholder: \"Describe your task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.CreateTaskItem,\n        children: /*#__PURE__*/_jsxDEV(MyButton, {\n          className: 'green-btn',\n          onClick: () => createTask(),\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTask, \"PMY+Hub9858IpZwBgitFQmamDvY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CreateTask;\nvar _c;\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"names":["React","useDispatch","useSelector","MyButton","MyInput","creaTask","setIsOpen","Textarea","styles","CreateTask","title","setTitle","useState","dispatch","tasks","state","createTask","newTask","id","Date","now","CreateTaskWrap","CreateTaskItem","e","target","value"],"sources":["/home/sorty/Documents/task-management-app/src/components/CreateTask/index.jsx"],"sourcesContent":["import React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { MyButton } from '../UI/button/MyButton'\nimport { MyInput } from '../UI/input/MyInput'\n\nimport { creaTask } from '../../redux/slices/tasksSlice'\nimport { setIsOpen } from '../../redux/slices/isOpenSlice'\nimport { Textarea } from '../UI/textarea'\n\nimport styles from './CreateTask.module.css'\n\nexport const CreateTask = () => {\n  const [title, setTitle] = React.useState('')\n\n  const dispatch = useDispatch()\n  const tasks = useSelector(state => state.createTask.tasks)\n\n\n  const createTask = () => {\n    const newTask = {\n      id: Date.now(),\n      title,\n    }\n\n    dispatch(creaTask([...tasks, newTask]))\n    dispatch(setIsOpen(false))\n    setTitle('')\n\n  }\n\n\n  return (\n    <div>\n      <div className={styles.CreateTaskWrap}>\n        <h2>Describe your task</h2>\n\n        <div className={styles.CreateTaskItem}>\n          <MyInput\n            onChange={e => setTitle(e.target.value)}\n            value={title}\n            placeholder={'Task name'}\n          />\n        </div>\n\n        <div className={styles.CreateTaskItem}>\n          <Textarea\n            rows='2'\n            cols='1'\n            placeholder='Describe your task'\n          />\n        </div>\n\n        <div className={styles.CreateTaskItem}>\n          <MyButton className={'green-btn'} onClick={() => createTask()}>Создать задачу</MyButton>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,OAAO,QAAQ,qBAAqB;AAE7C,SAASC,QAAQ,QAAQ,+BAA+B;AACxD,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,OAAOC,MAAM,MAAM,yBAAyB;AAAA;AAE5C,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAMa,KAAK,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,UAAU,CAACF,KAAK,CAAC;EAG1D,MAAME,UAAU,GAAG,MAAM;IACvB,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;MACdV;IACF,CAAC;IAEDG,QAAQ,CAACR,QAAQ,CAAC,CAAC,GAAGS,KAAK,EAAEG,OAAO,CAAC,CAAC,CAAC;IACvCJ,QAAQ,CAACP,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1BK,QAAQ,CAAC,EAAE,CAAC;EAEd,CAAC;EAGD,oBACE;IAAA,uBACE;MAAK,SAAS,EAAEH,MAAM,CAACa,cAAe;MAAA,wBACpC;QAAA,UAAI;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAK,eAE3B;QAAK,SAAS,EAAEb,MAAM,CAACc,cAAe;QAAA,uBACpC,QAAC,OAAO;UACN,QAAQ,EAAEC,CAAC,IAAIZ,QAAQ,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UACxC,KAAK,EAAEf,KAAM;UACb,WAAW,EAAE;QAAY;UAAA;UAAA;UAAA;QAAA;MACzB;QAAA;QAAA;QAAA;MAAA,QACE,eAEN;QAAK,SAAS,EAAEF,MAAM,CAACc,cAAe;QAAA,uBACpC,QAAC,QAAQ;UACP,IAAI,EAAC,GAAG;UACR,IAAI,EAAC,GAAG;UACR,WAAW,EAAC;QAAoB;UAAA;UAAA;UAAA;QAAA;MAChC;QAAA;QAAA;QAAA;MAAA,QACE,eAEN;QAAK,SAAS,EAAEd,MAAM,CAACc,cAAe;QAAA,uBACpC,QAAC,QAAQ;UAAC,SAAS,EAAE,WAAY;UAAC,OAAO,EAAE,MAAMN,UAAU,EAAG;UAAA,UAAC;QAAc;UAAA;UAAA;UAAA;QAAA;MAAW;QAAA;QAAA;QAAA;MAAA,QACpF;IAAA;MAAA;MAAA;MAAA;IAAA;EAEF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GAhDYP,UAAU;EAAA,QAGJR,WAAW,EACdC,WAAW;AAAA;AAAA,KAJdO,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}