{"ast":null,"code":"var _jsxFileName = \"/home/sorty/Documents/task-management-app/src/components/CreateTask/index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { TaskItem } from \"../TaskItem\";\nimport { MyButton } from \"../UI/button/MyButton\";\nimport { MyInput } from \"../UI/input/MyInput\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { creaTask } from '../../redux/slices/tasksSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateTask = () => {\n  _s();\n  const [title, setTitle] = React.useState('');\n  // const [tasks, setTasks] = React.useState([])\n\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.createTask.tasks);\n  console.log(tasks);\n  const createTask = () => {\n    const newTask = {\n      id: Date.now(),\n      title\n    };\n    dispatch(creaTask(newTask));\n    // setTasks([...tasks, newTask]);\n    setTitle('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      onChange: e => setTitle(e.target.value),\n      value: title,\n      placeholder: 'Опишите задачу'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), console.log(tasks2), /*#__PURE__*/_jsxDEV(MyButton, {\n      className: 'green-btn',\n      onClick: () => createTask(),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), tasks.map(taskObj => /*#__PURE__*/_jsxDEV(TaskItem, {\n      date: taskObj.id,\n      title: taskObj.title\n    }, taskObj.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTask, \"PMY+Hub9858IpZwBgitFQmamDvY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CreateTask;\nvar _c;\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"names":["React","TaskItem","MyButton","MyInput","useDispatch","useSelector","creaTask","CreateTask","title","setTitle","useState","dispatch","tasks","state","createTask","console","log","newTask","id","Date","now","e","target","value","tasks2","map","taskObj"],"sources":["/home/sorty/Documents/task-management-app/src/components/CreateTask/index.jsx"],"sourcesContent":["import React from \"react\";\nimport { TaskItem } from \"../TaskItem\";\nimport { MyButton } from \"../UI/button/MyButton\";\nimport { MyInput } from \"../UI/input/MyInput\";\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { creaTask } from '../../redux/slices/tasksSlice'\n\nexport const CreateTask = () => {\n  const [title, setTitle] = React.useState('')\n  // const [tasks, setTasks] = React.useState([])\n\n  const dispatch = useDispatch()\n  const tasks = useSelector(state => state.createTask.tasks)\n  console.log(tasks);\n\n\n  const createTask = () => {\n    const newTask = {\n      id: Date.now(),\n      title\n    }\n\n    dispatch(creaTask(newTask))\n    // setTasks([...tasks, newTask]);\n    setTitle('')\n\n  }\n\n  \n\n  return (\n    <div>\n\n      <MyInput\n        onChange={e => setTitle(e.target.value)} \n        value={title} \n        placeholder={'Опишите задачу'} \n      />\n\n      {console.log(tasks2)}\n\n      <MyButton className={'green-btn'} onClick={() => createTask()}>Создать задачу</MyButton>\n\n      {\n        tasks.map(taskObj => (\n          <TaskItem key={taskObj.id} date={taskObj.id} title={taskObj.title}/>\n        ))\n      }\n      \n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,OAAO,QAAQ,qBAAqB;AAE7C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,+BAA+B;AAAA;AAExD,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAC5C;;EAEA,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAMQ,KAAK,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,UAAU,CAACF,KAAK,CAAC;EAC1DG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAGlB,MAAME,UAAU,GAAG,MAAM;IACvB,MAAMG,OAAO,GAAG;MACdC,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;MACdZ;IACF,CAAC;IAEDG,QAAQ,CAACL,QAAQ,CAACW,OAAO,CAAC,CAAC;IAC3B;IACAR,QAAQ,CAAC,EAAE,CAAC;EAEd,CAAC;EAID,oBACE;IAAA,wBAEE,QAAC,OAAO;MACN,QAAQ,EAAEY,CAAC,IAAIZ,QAAQ,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MACxC,KAAK,EAAEf,KAAM;MACb,WAAW,EAAE;IAAiB;MAAA;MAAA;MAAA;IAAA,QAC9B,EAEDO,OAAO,CAACC,GAAG,CAACQ,MAAM,CAAC,eAEpB,QAAC,QAAQ;MAAC,SAAS,EAAE,WAAY;MAAC,OAAO,EAAE,MAAMV,UAAU,EAAG;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAW,EAGtFF,KAAK,CAACa,GAAG,CAACC,OAAO,iBACf,QAAC,QAAQ;MAAkB,IAAI,EAAEA,OAAO,CAACR,EAAG;MAAC,KAAK,EAAEQ,OAAO,CAAClB;IAAM,GAAnDkB,OAAO,CAACR,EAAE;MAAA;MAAA;MAAA;IAAA,QAC1B,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAGA;AAEV,CAAC;AAAA,GA5CYX,UAAU;EAAA,QAIJH,WAAW,EACdC,WAAW;AAAA;AAAA,KALdE,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}